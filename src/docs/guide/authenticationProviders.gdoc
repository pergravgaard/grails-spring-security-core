The plugin registers authentication providers that perform authentication by implementing the [AuthenticationProvider|https://docs.spring.io/spring-security/site/docs/3.2.x/apidocs/org/springframework/security/authentication/AuthenticationProvider.html] interface.

{table}
*Property* | *Default Value* | *Meaning*
providerNames | \['daoAuthenticationProvider', 'anonymousAuthenticationProvider', 'rememberMeAuthenticationProvider'\] | Bean names of authentication providers.
{table}

Use @daoAuthenticationProvider@ to authenticate using the User and Role database tables, @rememberMeAuthenticationProvider@ to log in with a rememberMe cookie, and @anonymousAuthenticationProvider@ to create an 'anonymous' authentication if no other provider authenticates.

To customize this list, you define a @providerNames@ attribute with a list of bean names. The beans must be declared either by the plugin, or yourself in @resources.groovy@ or @resources.xml@. Suppose you have a custom @MyAuthenticationProvider@ in @resources.groovy@:

{code}
beans = {
   myAuthenticationProvider(com.foo.MyAuthenticationProvider) {
      // attributes
   }
}
{code}

You register the provider in @grails-app/conf/Config.groovy@ as:

{code}
grails.plugin.springsecurity.providerNames = [
   'myAuthenticationProvider',
   'anonymousAuthenticationProvider',
   'rememberMeAuthenticationProvider']
{code}
